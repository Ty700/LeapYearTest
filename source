/*
* Author: Tyler Scotti
* Purpose: This tool will take in a year provided by a user, and will prompt if that year is a leap year or not.
*
* Logic: 
*
* First if Fail: 1725 % 4 = 1, thus can't be a leap year. Stops it from being dropped down. - Ouputted as such. Program returns 0;
* First if Pass: 1600 % 4 = 0, thus can be a leap year and is tested further.
* First if Pass2: 1800 % 4 = 0, thus can be a leap year and is tested further.
* First if Pass3: 2016 % 4 = 0, thus can be a leap year and is tested further.
*
* 1725 isn't tested further since it didn't pass initial check, thus never got the chance to be tested furhter.
* Second if Pass: 1600 % 100 = 0, and is tested again by 1600 % 400 = 0. So 1600 is a century year, that is also a leap year. Drops to final else statement.
* Second if Pass: 1800 % 100 = 0, and is tested again by 1800 % 400 = 200. So 1800 is a century year that is NOT a leap year. - Ouputted as such. Program returns 0;
* Second if Pass: 2016 % 100 = 16, thus isn't a leap year and doesn't get tested here. Drops to final else statement.
*
* Last else statement is a catch all for the entries that made it through the filter. If a number gets here, the program computes that it is a leap year. 
* - Outputted as such. Program returns 0;
*
*/

#include <iostream>
using namespace std;

int main() {
//Variable Declaration
   int inputYear;

//User input
   cout << "Enter in a year: ";
   cin >> inputYear;
   
//Check if inputYear is a leap year. If it passes the test, only century years and eligble leap year numbers will drop down.
   if((inputYear % 100) % 4 != 0){
      cout << inputYear << " - not a leap year" << endl;
//Century Year check - Since we know some century years can't be a leap year, this removes them thus we are only left with eligble leap year numbers.
   } else if((inputYear % 100 == 0) && (inputYear % 400 != 0)){
      cout << inputYear << " - not a leap year" << endl;
   } else {
//Will only get here if inputYear is eligble to be a leap year
         cout << inputYear << " - leap year" << endl;
      } 
   return 0;
}
